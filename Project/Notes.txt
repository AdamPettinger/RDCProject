Each joint can be represented by a DH matrix: A = R * T * T * R. But the first R changes based on the input angle.

So instead, each joint should be represented as a constant matrix L = T * T * R, and to get the joint at a specific angle, you pre-multiple by R: A = R * L. Where the pre-multiplied R is just cos’s and sin’s of the input angle.

To get the position of the second joint, you have to do P = R0*L0 * R1*L1. This should give you a 4x4 describing the rotations and translations.


The entire arm will be represented by a 3D matrix that is 4x4xn where n in the number of joints/links.

To find the link geometries: find the distance between joint i and i+1 (in global frame). Do the dot product with this and joint i’s x-axis to get the projection along the x-axis. Take the location of joint i, and add the x-axis vector * the dot product to it to get the a new point - the x-distance between i and i+1. Take this point and add the y-axis vector * the dot(y-axis, distance) to get the y-distance. Repeat for z.

https://www.youtube.com/watch?v=rA9tm0gTln8

