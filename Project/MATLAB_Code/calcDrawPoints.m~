function [points, color] = calcDrawPoints(P, Rl)
% Calculates the points for drawing lines to represent the robot
% The robot will be drawn as a series of lines
% The first line will be from the first point to the second point, etc

% P is a 4x4x6 double thats the DH params for each joint
% Rl is a 1x6 bool array that decribes links vs brackets

% points is a 3xn matrix of points where n = fn(number of joints)
% color is a 1xm string array where m = n-1

% Initialize the arrays (first point is [0,0,0]')
points = zeros(3, 12);
color = strings(1,11);

color(1) = 'red';
points(1:3, 2) = P(1:3,4,1);

for i=2:6
    if(Rl(i))
        % this link is a tube
        % Find the projection of the link's vector along the last link's z axis
        z = P(P(1:3,3,i-1));
        d = dot(P(1:3,3,i-1), (P(1:3,4,i))-(P(1:3,4,i-1)));
        % The next point will be this distance projected onto the last
        % link's z axis
        points(:,2*i-1) = points(:,2*i) + P(1:3,3,i-1).*d;
    else
        % this link is a bracket
        % Find the projection of the link's vector along the last link's z axis
        d = dot(P(1:3,3,i-1), (P(1:3,4,i))-(P(1:3,4,i-1)));
        % The next point will be this distance projected onto the last
        % link's z axis
        points(:,2*i-1) = points(:,2*i) + P(1:3,3,i-1).*d;
    end
    
    % The next point will be the next joint's origin
    points(:, 2*i) = P(1:3,4,i);
    color(2*i - 2) = 'red';
    color(2*i - 1) = 'blue';
end

end

